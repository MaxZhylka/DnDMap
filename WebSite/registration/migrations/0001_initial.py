# Generated by Django 4.2.10 on 2024-02-10 20:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20, verbose_name='Имя персонажа')),
                ('characterClass', models.CharField(default='', max_length=20, verbose_name='Класс')),
                ('race', models.CharField(default='', max_length=20, verbose_name='Раса')),
                ('worldviews', models.CharField(default='', max_length=20, verbose_name='Мировозрение')),
                ('experience', models.IntegerField(default=0, verbose_name='Опыт')),
                ('level', models.IntegerField(default=0, verbose_name='Уровень')),
                ('сharacterPlayer', models.CharField(default='', max_length=20, verbose_name='Имя игрока')),
                ('strength', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Сила')),
                ('dexterity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Ловкость')),
                ('constitution', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Телосложение')),
                ('intelligence', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Интелект')),
                ('wisdom', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Мудрость')),
                ('charisma', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Харизма')),
                ('inspiration', models.BooleanField(default=False, verbose_name='Вдохновление')),
                ('strength_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Силы')),
                ('dexterity_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Ловкости')),
                ('constitution_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Телосложения')),
                ('intelligence_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Интелекта')),
                ('wisdom_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Мудрости')),
                ('charisma_savingthrow', models.BooleanField(default=False, verbose_name='Спасбросок Харизмы')),
                ('acrobatic', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Акробатика')),
                ('animalHandling', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Уход за Животными')),
                ('arcane', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Магия')),
                ('athletics', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Атлетика')),
                ('deception', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Обман')),
                ('history', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='История')),
                ('insight', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Прорицание')),
                ('intimidation', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Запугивание')),
                ('investigation', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Расследование')),
                ('medicine', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Медицина')),
                ('nature', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Природа')),
                ('perception', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Восприятие')),
                ('performance', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Выступление')),
                ('persuasion', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Убеждение')),
                ('religion', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Религия')),
                ('sleightOfHand', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Ловкость Рук')),
                ('stealth', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Скрытность')),
                ('survival', models.IntegerField(choices=[(0, 'Нет Владения'), (1, 'Владение'), (2, 'Мастерство')], default=0, verbose_name='Выживание')),
                ('armourclass', models.IntegerField(default=0, verbose_name='Класс Доспеха')),
                ('speed', models.IntegerField(default=0, verbose_name='Скорость')),
                ('hitPointsMax', models.IntegerField(default=0, verbose_name='Максимальные Хиты')),
                ('hitPoints', models.IntegerField(default='', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(models.IntegerField(default=0, verbose_name='Максимальные Хиты'))], verbose_name='Текущие Хиты')),
                ('temporaryHitPoints', models.IntegerField(default=0, verbose_name='Временные Хиты')),
                ('hitDice', models.IntegerField(choices=[(0, ''), (1, '1d6'), (2, '1d8'), (3, '1d10'), (4, '1d12')], default=0, verbose_name='Кости Хитов')),
                ('personalTraits', models.TextField(default='', verbose_name='Черты Характера')),
                ('ideals', models.TextField(default='', verbose_name='Идеалы')),
                ('bonds', models.TextField(default='', verbose_name='Привязаности')),
                ('flaws', models.TextField(default='', verbose_name='Слабости')),
                ('features', models.TextField(default='', verbose_name='Особенности')),
                ('proficiencies', models.TextField(default='', verbose_name='Умения')),
                ('platinum', models.IntegerField(default=0, verbose_name='Платиновые Монеты')),
                ('electrum', models.IntegerField(default=0, verbose_name='Электровиумые Монеты')),
                ('golden', models.IntegerField(default=0, verbose_name='Золотые Монеты')),
                ('silver', models.IntegerField(default=0, verbose_name='Серебряные Монеты')),
                ('copper', models.IntegerField(default=0, verbose_name='Медные Монеты')),
                ('age', models.IntegerField(default=0, verbose_name='Возраст')),
                ('height', models.IntegerField(default=0, verbose_name='Высота')),
                ('weight', models.IntegerField(default=0, verbose_name='Вес')),
                ('eyeColor', models.IntegerField(default=0, verbose_name='Глаза')),
                ('skinColor', models.IntegerField(default=0, verbose_name='Кожа')),
                ('hairColor', models.IntegerField(default=0, verbose_name='Волосы')),
                ('appearance', models.ImageField(default=0, upload_to='', verbose_name='Картинка')),
                ('allies', models.TextField(default='', verbose_name='Союзники и Организации')),
                ('backstory', models.TextField(default='', verbose_name='Предыстория персонажа')),
                ('additionalfeatures', models.TextField(default='', verbose_name='Дополнительные способности и умения')),
                ('treasure', models.TextField(default='', verbose_name='Сокровища')),
                ('spellcastingClass', models.CharField(default='', max_length=20, verbose_name='Клас Заклинателя')),
                ('spellSavingThrow', models.IntegerField(default=0, verbose_name='Сложность Спасброска')),
                ('spellAttackBonus', models.IntegerField(default=0, verbose_name='Бонус Атаки Залинанием')),
                ('levelOneTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 1 уровня')),
                ('levelTwoTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 2 уровня')),
                ('levelThreeTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 3 уровня')),
                ('levelFourTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 4 уровня')),
                ('levelFiveTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 5 уровня')),
                ('levelSixTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 6 уровня')),
                ('levelSevenTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 7 уровня')),
                ('levelEightTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 8 уровня')),
                ('levelNineTotal', models.IntegerField(default=0, verbose_name='Количество ячеек 9 уровня')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users', models.CharField(max_length=100)),
                ('link', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.character')),
            ],
        ),
    ]
